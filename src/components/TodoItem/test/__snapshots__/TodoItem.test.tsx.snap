// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should match snapshot 1`] = `
<View
  collapsable={false}
  handlerTag={5}
  handlerType="PanGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onLayout={[Function]}
  style={
    {
      "overflow": "hidden",
    }
  }
  testID="todo-item-container"
>
  <View
    collapsable={false}
    style={
      {
        "bottom": 0,
        "flexDirection": "row",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": [
          {
            "translateX": -10000,
          },
        ],
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "opacity": 1,
          "paddingLeft": 16,
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "orange",
              "fontSize": 24,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      onLayout={[Function]}
    />
  </View>
  <View
    collapsable={false}
    style={
      {
        "bottom": 0,
        "flexDirection": "row-reverse",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": [
          {
            "translateX": -10000,
          },
        ],
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "opacity": 1,
          "paddingRight": 8,
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "red",
              "fontSize": 24,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      onLayout={[Function]}
    />
  </View>
  <View
    collapsable={false}
    handlerTag={6}
    handlerType="TapGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    pointerEvents="auto"
    style={
      {
        "transform": [
          {
            "translateX": -0,
          },
        ],
      }
    }
  >
    <View
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderRadius": 8,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "margin": 16,
          "marginVertical": 8,
          "padding": 16,
          "shadowOffset": {
            "height": 1,
            "width": 0.5,
          },
          "shadowOpacity": 0.8,
          "shadowRadius": 2,
        }
      }
    >
      <Text>
        dummyTitle
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="todo-item-icon"
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "lightgrey",
                "fontSize": 30,
              },
              undefined,
              {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;
